@import url('https://fonts.googleapis.com/css2?family=Lato:ital,wght@0,100;0,300;0,400;0,500;0,700;0,900;1,100;1,300;1,400;1,700;1,900&display=swap');

/* Variables */

:root {
  --color-blue-primary: 0, 87, 255;
  --color-blue-secondary: 0, 162, 255;
  --color-blue-tertiary: 0, 212, 249;
  --color-blue-light: 230, 239, 255;
  --color-orange-primary: 255, 168, 0;
  --color-orange-secondary: 255, 193, 78;
  --color-orange-tertiary: 255, 215, 132;
  --color-purple-primary: 201, 51, 231;
  --color-purple-light: 250, 235, 253;
  --color-footer: 255, 216, 132;
  --color-danger: 255, 59, 48;
  --color-warning: 255, 204, 0;
  --color-success: 52, 199, 89;
  --color-white: 255, 255, 255;
  --color-gray-1: 225, 225, 225;
  --color-gray-2: 187, 187, 187;
  --color-gray-3: 131, 131, 131;
  --color-gray-4: 82, 82, 82;
  --color-black: 31, 31, 31;
  --font-title: 'Satoshi', sans-serif;
  --font-text: 'Lato', sans-serif;
  --font-logo: 'Agbalumo', serif;
  /* Type scale, u for up, d for down  */
  --typescale-u6: 3.000rem;
  --typescale-u5: 2.500rem;
  --typescale-u4: 2.062rem;
  --typescale-u3: 1.750rem;
  --typescale-u2: 1.438rem;
  --typescale-u1: 1.188rem;
  --typescale-base: 1rem;
  --typescale-d1: 0.812rem;
  --typescale-d2: 0.688rem;
  --radius-rounded: 100rem;
  --radius-small: 5px;
  --radius-medium: 20px;
  /* Viewports */
  --viewport-lg: 1440px;
  --viewport-sm: 926px;
}

/*! minireset.css v0.0.6 | MIT License | github.com/jgthms/minireset.css */

html,body,p,ol,ul,li,dl,dt,dd,blockquote,figure,fieldset,legend,textarea,pre,iframe,hr,h1,h2,h3,h4,h5,h6{
  margin:0;
  padding:0
}

h1,h2,h3,h4,h5,h6{
  font-size:100%;
  font-weight:normal
}

ul{
  list-style:none
}

button,input,select{
  margin:0
}

html{
  box-sizing:border-box
}

*,*::before,*::after{
  box-sizing:inherit
}

img,video{
  height:auto;
  max-width:100%
}

iframe{
  border:0
}

table{
  border-collapse:collapse;
  border-spacing:0
}

td,th{
  padding:0
}

#logo {
  height: 64px;
}

.navbar {
  padding: 8px;
  position: fixed;
  top: 0;
  z-index: 1001;
  background-color: white;
  display: flex;
  flex-direction: row;
  justify-content: space-between;
  align-items: center;
  width: 100%;
}

.navbar .nav-burger {
  width: 35px;
  height: 30px;
  position: relative;
  z-index: 1002;
  transform: rotate(0deg);
  transition: .5s ease-in-out;
  cursor: pointer;
}

.nav-burger span {
  display: block;
  position: absolute;
  height: 2px;
  width: 100%;
  background: black;
  border-radius: 3px;
  left: 0;
  transform: rotate(0deg);
  transition: .25s ease-in-out;
}

.navbar .nav-burger span:nth-child(1) {
  top: 0px;
}

.navbar .nav-burger span:nth-child(2),
.navbar .nav-burger span:nth-child(3) {
  top: 13px;
}

.navbar .nav-burger span:nth-child(4) {
  top: 26px;
}

.navbar .nav-burger.open span:nth-child(1) {
  top: 13px;
  width: 0%;
  left: 50%;
}

.navbar .nav-burger.open span:nth-child(2) {
  transform: rotate(45deg);
}

.navbar .nav-burger.open span:nth-child(3) {
  transform: rotate(-45deg);
}

.navbar .nav-burger.open span:nth-child(4) {
  top: 13px;
  width: 0%;
  left: 50%;
}

#menu {
  position: fixed;
  top: 0;
  left: -105%;
  width: 100vw;
  height: 100vh;
  background-color: white;
  z-index: 1000;
  transition: left 0.5s ease;
  padding: 50px;
  box-sizing: border-box;
}

#menu.menu-visible {
  left: 0;
}

#menu ul {
  list-style-type: none;
  padding: 0;
  margin: 0;
  display: flex;
  flex-direction: column;
  justify-content: center;
  height: 100%;
}

#menu ul li {
  margin: 20px 0;
}

#menu ul li a {
  text-decoration: none;
  color: black;
  font-size: 24px;
  text-align: center;
  display: block;
}

.menu-hidden {
  left: -100%;
}

.row {
  display: flex;
  justify-content: space-around;
  align-items: center;
  gap: 30px;
}

@media only screen and (min-width: 768px) {
  .navbar {
    padding: 0 20%;
  }
}

@media only screen and (min-width: 1440px) {
  .navbar {
    padding: 1rem 20%;
  }

  .navbar .nav-burger {
    display: none;
  }
}

footer {
  width: 100%;
  padding: 1rem 20% 4rem;
  display: flex;
  flex-direction: column;
  justify-content: flex-start;
  align-items: center;
  gap: 2rem;
  background-color: rgb(var(--color-footer),0.2);
  font-family: var(--font-text);
  font-size: var(--typescale-d1);
  color: rgb(var(--color-gray-4));
}

footer p {
  margin: 0;
}

.footer-parts {
  width: 100%;
  display: flex;
  justify-content: space-between;
}

.footer-parts p {
  margin-bottom: 5px;
  font-size: var(--typescale-base);
}

.footer-parts a {
  text-decoration: none;
  color : rgb(var(--color-black));
  margin-bottom: .2rem;
}

.footer-parts div {
  display: flex;
  flex-direction: column;
}

footer nav {
  width: 100%;
  display: flex;
  justify-content: space-between;
}

.footer-conditions {
  display: flex;
  gap: 20px;
  align-items: center;
  width: 70%;
  order: 0;
}

footer #logo {
  width: 85px;
  height: auto;
  -o-object-fit: contain;
     object-fit: contain;
}

.footer-conditions > div > div {
  display: flex;
  flex-wrap: wrap;
}

.footer-conditions > div > div a {
  text-decoration: none;
  margin-right: 10px;
}

.footer-networks {
  display: flex;
  gap: 10px;
  align-items: center;
  order: 1;
}

.footer-networks a{
  padding: 10px;
  border: solid 1px rgb(var(--color-gray-2));
  border-radius: 100%;
  color: rgb(var(--color-black));
}

.footer-trip {
  display: flex;
  gap: 20px;
  align-items: center;
  width: 100%;
}

.footer-trip img {
  -o-object-fit: contain;
     object-fit: contain;
  width: 30px;
  margin-left: 53px;
}

.footer-finance {
  display: flex;
  align-items: center;
  gap: 5px;
  flex-wrap: nowrap;
  width: 100%;
  margin-left: 206px;
}

.footer-finance a {
  color: rgb(var(--color-black));
}

@media (max-width: 1200px) {
  footer{
    padding: 25px 15%;
  }
}

@media only screen and (max-width: 768px) {
  footer {
    width: 100%;
    height: auto;
    padding: 20px;
    justify-content: center;
    gap: 20px;
  }

  .footer-parts {
    flex-direction: column;
    gap: 20px;
  }

  nav {
    flex-direction: column;
    gap: 20px;
  }

  .footer-conditions {
    width: 100%;
    order: 1;
  }

  .footer-networks {
    justify-content: flex-start;
    align-items: center;
    order: 0;
  }

  .footer-trip, .footer-finance {
    width: 100%;
    margin-left: 0;
    flex-wrap: wrap;
  }
}

.loader {
  width: 100%;
  height: 100%;
  display: flex;
  align-items: center;
  justify-content: center;
  z-index: 10000;
  background: white;
  position: fixed;
}

.loader svg {
  color: rgb(var(--color-blue-primary));
  animation: rotate 2s linear infinite;
}

@keyframes rotate {
  100% {
    transform: rotate(360deg);
  }
}

.alert {
  width: 100%;
  padding: 1rem 2rem;
  margin-bottom: 2rem;
  overflow: hidden;
  border-radius: var(--radius-medium);
  display: block;
  animation: alert-disappear 1s 5s forwards;
}

.alert.success {
  background: rgba(var(--color-success), .1);
  border: 1px solid rgb(var(--color-success));
}

@keyframes alert-disappear {
  0% {
    transform: translateY(0);
    opacity: 1;
  }

  99% {
    transform: translateY(-1rem);
    opacity: 0;
  }

  100% {
    display: none;
  }
}

x-tabs {
  width: 100%;
  display: flex;
  flex-wrap: wrap;
  gap: .5rem;
}

x-tabs xtab {
  flex-basis: 100%;
}

x-tab {
  background: white;
  padding: 1rem 2rem;
  border-bottom: 2px solid rgb(var(--color-gray-2));
  transition: border .2s;
}

x-tab[selected] {
  border-bottom: 2px solid rgb(var(--color-blue-primary));
}

x-tabs:not(:defined),
x-tab:not(:defined),
x-panel:not(:defined) {
  display: block;
}

/* Vertical tabs */

x-tabs.column {
  flex-direction: row;
}

x-tabs.column x-tab,
.tab-button {
  --color: var(--color-blue-primary);
  gap: 1rem;
  border: none;
  position: relative;
  border-radius: var(--radius-small);
  display: flex;
  align-items: center;
  padding: 1rem 2rem 1rem 1rem;
  cursor: pointer;
}

x-tabs.column x-tab svg,
.tab-button svg {
  stroke-width: 1.5;
  width: 2rem;
}

x-tabs.column x-tab[selected],
.tab-button[selected] {
  background: rgba(var(--color), .1);
  font-weight: 700;
}

x-tabs.column x-tab:hover,
.tab-button:hover {
  background: rgba(var(--color-gray-1), .5);
}

x-tabs.column x-tab::before,
.tab-button::before {
  content: "";
  width: 3px;
  height: 80%;
  position: absolute;
  left: 0;
  top: 50%;
  transform: translateY(-50%);
}

x-tabs.column x-tab[selected]::before,
.tab-button[selected]::before {
  background: rgb(var(--color));
  border-radius: var(--radius-rounded);
}

.tab-button.pro {
  --color: var(--color-purple-primary);
}

.link {
  --color: rgb(var(--color-blue-primary));
  width: -moz-fit-content;
  width: fit-content;
  display: inline-block;
  color: var(--color);
  position: relative;
  /*padding-bottom: .2rem;*/
}

.link::before {
  content: "";
  display: block;
  width: 100%;
  height: 1px;
  bottom: -3px;
  position: absolute;
  background: var(--color);
  transform: scaleX(0);
  transform-origin: right;
  transition: transform .3s;
}

.link:hover::before {
  transform: scaleX(1);
  transform-origin: left;
}

.link.pro {
  --color: rgb(var(--color-purple-primary));
}

.link.small {
  font-size: var(--typescale-d1);
}

.link.small::before {
  bottom: -2px;
}

/* Simple link */

.link.simple {
  --color: rgb(var(--color-black));
}

.link.simple:hover {
  --color: rgb(var(--color-gray-3));
}

.link.simple::before {
  content: none;
}

table.table {
  width: 100%;
  height: 100%;
  border-radius: 5px;
  overflow: hidden;
  border-collapse: collapse;
}

.table th,
.table tr,
.table td {
  padding: 0.5rem;
  border: 1px solid rgb(var(--color-gray-2));
}

.table .table-head {
  width: 100%;
  padding: .5rem;
  font-weight: 400;
  text-align: center;
  border: none;
  background-color: rgb(var(--color-gray-1));
  color: rgb(var(--color-gray-4));
}

th:has(.table-head) {
  border: none;
}

.table.center td {
  text-align: center;
}

/* Table form */

.table-input {
  width: 100%;
  padding: 1rem 1rem;
  border: none;
}

.table-input:hover {
  background-color: rgba(var(--color-gray-1), .5);
}

.table-button {
  width: 100%;
  padding: 0.5rem 1rem;
  border: none;
  color: rgb(var(--color-purple-primary));
  cursor: pointer;
  display: flex;
  justify-content: space-between;
  align-items: center;
  gap: 1rem;
}

.table-button:hover {
  background-color: rgba(var(--color-purple-primary), .1);
}

td:has(.table-input),
td:has(.table-button) {
  padding: 0;
  height: -moz-fit-content;
  height: fit-content;
}

.image-uploader {
  width: 100%;
  height: 100%;
  padding: 2rem;
  border: 2px dashed rgb(var(--color-gray-1));
  border-radius: var(--radius-small);
  display: flex;
  flex-direction: column;
  align-items: center;
  justify-content: center;
  gap: 1rem;
  cursor: pointer;
  transition: border-color 0.3s;
}

.image-uploader:hover {
  border-color: rgb(var(--color-gray-2));
}

.image-uploader svg {
  width: 40px;
  height: 40px;
}

.image-uploader.over {
  border-color: rgb(var(--color-gray-2));
  background: rgba(var(--color-success), .2);
}

/* Photos container */

#photos.over {
  padding: .5rem;
  border: 1px solid rgb(var(--color-gray-2));
  border-radius: var(--radius-small);
}

/* Image card */

.uploaded-image-card {
  width: 100%;
  height: 300px;
  display: flex;
  border: 1px solid rgb(var(--color-gray-1));
  border-radius: var(--radius-medium);
  overflow: hidden;
  background: white;
}

.uploaded-image-card .image-container {
  width: 100%;
  height: 100%;
  border-radius: var(--radius-medium);
  overflow: hidden;
}

.uploaded-image-card img {
  width: 100%;
  height: 100%;
  -o-object-fit: cover;
     object-fit: cover;
}

.uploaded-image-card .card-buttons {
  padding: .5rem;
  display: flex;
  flex-direction: column;
  justify-content: space-between;
  gap: 1rem;
}

.uploaded-image-card.dragging {
  border: 2px dashed rgb(var(--color-gray-1));
}

/* Drag button */

.photo-drag {
  cursor: grab !important;
}

/* Line for dragging */

.drag-line {
  width: 100%;
  height: 40px;
  border: 1px solid rgb(var(--color-gray-2));
  border-radius: var(--radius-medium);
  /* hash pattern */
  background-image: linear-gradient(45deg, rgb(var(--color-gray-2)) 25%, transparent 25%, transparent 50%, rgb(var(--color-gray-2)) 50%, rgb(var(--color-gray-2)) 75%, transparent 75%, transparent);
}

.badge {
  --foreground: var(--color-white);
  --background: var(--color-blue-primary);
  padding: .2rem .4rem;
  font-size: var(--typescale-d1);
  background: rgb(var(--background));
  color: rgb(var(--foreground));
}

.badge .yellow {
  --foreground: var(--color-gray-4);
  --background: var(--color-warning);
}

.badge .green {
  --foreground: var(--color-white);
  --background: var(--color-success);
}

/* General form style */

.form form {
  display: flex;
  flex-direction: column;
  gap: 1rem;
}

/* A page which only contains a form */

.form-page {
  margin: 0 15%;
  margin-top: 4rem;
  display: flex;
  flex-direction: column;
  align-items: center;
  gap: 1rem;
}

.form-page form {
  width: 100%;
}

.form-page h1 {
  margin-bottom: 2rem;
}

.form-page .form-inputs {
  width: 100%;
  display: flex;
  flex-direction: column;
  gap: .4rem;
}

/* Helper text */

.helper {
  font-size: var(--typescale-d1);
  color: rgb(var(--color-gray-4));
}

/* Custom style */

.price-bubble {
  height: -moz-fit-content;
  height: fit-content;
  padding: .5rem 1rem;
  background: rgba(var(--color-purple-primary), .1);
  border-radius: var(--radius-rounded);
  font-size: var(--typescale-u1);
  color: rgb(var(--color-gray-4));
}

/*

Button component

Default color is blue.
Default size is medium.

.button
    .gray
    .danger
    .purple
    .sm
    .md
    .lg
    .only-icon
        .sm
        .md
        .lg
    .icon-left
    .icon-right

 */

.button {
  --background: var(--color-blue-primary);
  --border: var(--color-blue-primary);
  --color: var(--color-white);
  --background-hover: var(--color-white);
  --border-hover: var(--color-blue-primary);
  --color-hover: var(--color-blue-primary);
  padding: .8rem 2rem;
  background: rgb(var(--background));
  border: 1px solid rgb(var(--border));
  border-radius: var(--radius-rounded);
  outline: none;
  font-size: inherit;
  font-weight: 500;
  white-space: nowrap;
  color: rgb(var(--color));
  display: flex;
  align-items: center;
  justify-content: center;
  gap: 1rem;
  cursor: pointer;
  transition: color .2s, background .1s, border .2s, box-shadow .2s;
}

.button:hover {
  background: rgb(var(--background-hover));
  border: 1px solid rgb(var(--border-hover));
  color: rgb(var(--color-hover));
}

.button:focus {
  box-shadow: 0 0 0 3px rgba(var(--background), .5);
  transform: scale(1.02);
}

.button.gray {
  --background: var(--color-white);
  --border: var(--color-gray-2);
  --color: var(--color-black);
  --background-hover: var(--color-gray-1);
  --border-hover: var(--color-gray-2);
  --color-hover: var(--color-black);
}

.button.danger {
  --background: var(--color-danger);
  --border: var(--color-danger);
  --color: var(--color-white);
  --background-hover: var(--color-white);
  --border-hover: var(--color-danger);
  --color-hover: var(--color-danger);
}

.button.purple {
  --background: var(--color-purple-primary);
  --border: var(--color-purple-primary);
  --color: var(--color-white);
  --background-hover: var(--color-white);
  --border-hover: var(--color-purple-primary);
  --color-hover: var(--color-purple-primary);
}

.button.sm {
  padding: .5rem 1.5rem;
}

.button.md {
  padding: .8rem 2rem;
}

.button.lg {
  padding: 1rem 2.5rem;
}

.button.only-icon {
  padding: 0;
}

.button.only-icon.sm {
  height: 2.5rem;
}

.button.only-icon {
  width: 3rem;
  height: 3rem;
}

.button.only-icon.lg {
  width: 3.5rem;
  height: 3.5rem;
}

.button svg {
  width: 1.2rem;
  height: 1.2rem;
}

.button.icon-left {
  padding-left: 1rem;
}

.button.icon-right {
  padding-right: 1rem;
}

.button.no-border {
  border: none;
}

.button:disabled,
.button[aria-disabled] {
  background: rgb(var(--color-white));
  color: rgb(var(--color-gray-3));
  cursor: not-allowed;
  border: 1px solid rgb(var(--color-gray-2));
}

.button:disabled.no-border,
.button[aria-disabled].no-border {
  border: none;
}

/* Reset button */

button {
  background: none;
  border: none;
  padding: 0;
  font: inherit;
  color: inherit;
  cursor: pointer;
}

/* Options container */

div[slot="list"],
div[slot="options"] {
  width: 100%;
  top: calc(100% + 1rem);
  left: 0;
  position: absolute;
  border: 1px solid rgb(var(--color-gray-2));
  border-radius: var(--radius-small);
  background: white;
  z-index: 100;
  overflow: hidden;
  display:flex;
  flex-direction: column;
  pointer-events: none;
  opacity: 0;
  transform: translateY(-.5rem);
  transition: opacity .1s, transform .1s;
}

div[slot="list"].open,
div[slot="options"].open {
  opacity: 1;
  transform: translateY(0);
  pointer-events: auto;
}

div[slot="list"].fake-hidden {
  min-height: 2rem;
  animation: loading 1s infinite;
}

@keyframes loading {
  0% {
    background-color: rgb(var(--color-gray-1));
  }

  100% {
    background-color: rgba(var(--color-white));
  }
}

/* Option button for select and autocomplete input */

.option {
  padding: .8rem 1.5rem .8rem .5rem;
  display: flex;
  align-items: center;
  gap: .5rem;
  text-align: left;
  cursor: pointer;
  color: rgb(var(--color-black));
  border: none;
}

.option:hover {
  background-color: rgba(var(--color-gray-1), .5);
}

.option.selected {
  background-color: rgb(var(--color-gray-1));
}

.option .check {
  order: -1;
  width: 1rem;
  display: block;
}

.option .check svg {
  width: 1rem;
  height: 1rem;
}

.option:not(:has(.check)) {
  padding-left: 1.5rem;
}

/*

Its the normal checkbox button.
"/switch.css" also uses a checkbox. so be careful and don't forget
to use the class "checkboxNormal".

if it isn't specified specified. A normal checkbbox will appear.

It only exists for the pro version in the current version.

Please consult yann for more information regarding its creation
/**************************************************************************

                FOR THE CHECKBOX YOU CAN COPY THAT LINE

            <input class="checkboxNormal" type="checkbox" id="bla">
            <label class="checkboxNormal">lorem</label>

    The id is necessery in order to tick the correct parameters.
    each checkbox needs its own id to be recognized, never forget that.            
                    
**************************************************************************/

input.checkbox-normal[type="checkbox"]
{
  -webkit-appearance: none;
  -moz-appearance: none;
       appearance: none;
  margin: 5px;
  display: grid;
  place-content: center;
  font: inherit;
  color: rgb(var(--color-gray-2));
  width: 1.5em;
  height: 1.5em;
  border: 1px solid rgb(var(--color-gray-2));
  border-radius: 0.15em;
}

input.checkbox[type="checkbox"]::before
{
  content: "";
  width: 1.5em;
  height: 1.5em;
  transform: scale(0);
  transition: 120ms ease-in-out;
}

input.checkbox[type="checkbox"]:checked::before
{
  transform: scale(0.7);
  transition: 120ms ease-in-out;
  background-color: rgb(var(--color-purple-primary));
  border-radius: 0.15em;
}

/**************************************************************************

            FOR THE RADIO BUTTON VERSION YOU CAN COPY THAT LINE

        <input class="checkboxNormal" type="radio" id="tezt" name="test">
        <label class="checkboxNormal" for="tezt">gougou</label>

    
    Don't forget use the type radio, even though the class is currently
    called "checkboxNormal".

    Name is really important to make the radio button works properly.
    If it isn't specified, it will work like a checkbox which can't be
    unticked.

    Id works the same way
    The id is necessery in order to tick the correct parameters.
    each checkbox needs its own id to be recognized, never forget that.  

**************************************************************************/

input[type="radio"]
{
  -webkit-appearance: none;
  -moz-appearance: none;
       appearance: none;
  margin: 5px;
  display: grid;
  place-content: center;
  font: inherit;
  color: rgb(var(--color-gray-2));
  width: 1.5em;
  height: 1.5em;
  border: 1px solid rgb(var(--color-gray-2));
  border-radius: 1em;
}

input[type="radio"]::before 
{
  content: "";
  width: 1.5em;
  height: 1.5em;
  transform: scale(0);
  transition: 120ms transform ease-in-out;
  box-shadow: inset 1em 1em var(--form-control-color);
}

input[type="radio"]:checked::before
{
  transform: scale(0.7);
  background-color: rgb(var(--color-purple-primary));
  border-radius: 1em;
}

label.checkbox
{
  display: flex;
  align-items: center;
}

/*

    Nothing complicated here. It corresponds to the section Header
    on the figma

    It was made by yann so please consult him if you have any questions 
    regarding its creation.

*/

.section-header
{
  margin-bottom: 20px;
  padding-bottom: 10px;
  width: 100%;
  display: flex;
  border-bottom: 1px solid rgb(var(--color-gray-2));
  font-size: var(--typescale-u1);
}

/* Pour Mobile 
@media (max-width: 599px) {
truc {

}
}

/* Pour Tablettes 
@media (min-width: 600px) and (max-width: 899px) {
truc {

}
}
*/

/* Pour petits Laptops 
@media (min-width: 900px) and (max-width: 1199px) {
truc {

}
}
*/

/*

Its the switch buttons,  which you can toggle and untoggle.
It originaly is a checkbox. So its very important to use the 
class "switch" and not to confound with checkboxNormal.

If it isn't specified, it won't work.

It only exists for the pro version in the current version.

Please consult Yann for more informations regarding its creation.


/**************************************************************************

                FOR THE CHECKBOX YOU CAN COPY THAT LINE

            <input class="switch" type="checkbox" id="switchtest" />
            <label class="switch" for="switchtest">Toggle</label>

	The id works the same way that checkboxNormal's 
    The id is necessery in order to tick the correct parameters.
    each checkbox needs its own id to be recognized, never forget that.            
                    
**************************************************************************/

input.switch[type=checkbox]{
  visibility: hidden;
  height: 0;
  width: 0;
}

label.switch {
  cursor: pointer;
  text-indent: -9999px;
  width: 4em;
  height: 2em;
  background: #fff;
  display: block;
  border: 1px solid rgb(var(--color-gray-2));
  border-radius: 100px;
  position: relative;
}

label.switch:after {
  content: '';
  position: absolute;
  top: 10%;
  left: 5%;
  width: 1.5em;
  height: 1.5em;
  background: rgb(var(--color-gray-3));
  border-radius: 90px;
  transition: 0.3s;
}

input.switch:checked + label.switch:after
{
  transition: 0.3s;
  background: #fff;
}

input.switch:checked + label {
  transition: 0.3s;
  background: rgb(var(--color-purple-primary));
}

input.switch:checked + label:after {
  left: calc(100% - 5px);
  transform: translateX(-100%);
}

/* Remove date icon on input field */

/*input[type="date"]::-webkit-calendar-picker-indicator {*/

/*    display: none;*/

/*}*/

input {
  -webkit-appearance: none;
  -moz-appearance: none;
       appearance: none;
  border: none;
  font-size: inherit;
  font-family: inherit;
}

input[type="time"] {
  -webkit-appearance: none;
  -moz-appearance: none;
       appearance: none;
  border: none;
}

/* Reset textarea */

textarea {
  resize: vertical;
}

.inlineOfferGap {
  display: flex;
  flex-direction: row;
  flex-wrap: wrap;
  align-items: center;
  gap: 20px;
}

.inlineOffer {
  display: flex;
  flex-direction: row;
  flex-wrap: wrap;
  align-items: center;
  gap: 5px;
}

.columnOffer {
  display: flex;
  flex-direction: column;
  flex-wrap: wrap;
  gap: 20px;
  font-weight: 550;
}

.paddingOfferDetailed {
  display: flex;
  flex-direction: column;
  flex-wrap: nowrap;
  align-items: flex-start;
  gap: 30px;
}

x-acordeon {
  width: 100%;
}

.acordeonSize {
  width: 100%;
}

.publication {
  display: flex;
  flex-direction: row;
  flex-wrap: wrap;
  gap: 5px;
  justify-content: flex-end;
}

.author{
  text-decoration: underline;
}

.vertical-list {
  display: flex;
  flex-direction: column;
  gap: 16px;
}

.horizontal-line {
  color: rgb(var(--color-gray-1));
}

/* Import fonts */

/**
 * @license
 *
 * Font Family: Satoshi
 * Designed by: Deni Anggara
 * URL: https://www.fontshare.com/fonts/satoshi
 * © 2024 Indian Type Foundry
 *
 * Font Styles:
 * Satoshi Variable(Variable font)
 * Satoshi Variable Italic(Variable font)
 * Satoshi Light
 * Satoshi Light Italic
 * Satoshi Regular
 * Satoshi Italic
 * Satoshi Medium
 * Satoshi Medium Italic
 * Satoshi Bold
 * Satoshi Bold Italic
 * Satoshi Black
 * Satoshi Black Italic
 *
*/

/**
* This is a variable font
* You can controll variable axes as shown below:
* font-variation-settings: 'wght' 900.0;
*
* available axes:

* 'wght' (range from 300.0 to 900.0)

*/

@font-face {
  font-family: 'Satoshi-Variable';

  src: url('/assets/fonts/satoshi/Satoshi-Variable.woff2') format('woff2'),
       url('/assets/fonts/satoshi/Satoshi-Variable.woff') format('woff'),
       url('/assets/fonts/satoshi/Satoshi-Variable.ttf') format('truetype');

  font-weight: 300 900;

  font-display: swap;

  font-style: normal;
}

/**
* This is a variable font
* You can controll variable axes as shown below:
* font-variation-settings: 'wght' 900.0;
*
* available axes:

* 'wght' (range from 300.0 to 900.0)

*/

@font-face {
  font-family: 'Satoshi-VariableItalic';

  src: url('/assets/fonts/satoshi/Satoshi-VariableItalic.woff2') format('woff2'),
       url('/assets/fonts/satoshi/Satoshi-VariableItalic.woff') format('woff'),
       url('/assets/fonts/satoshi/Satoshi-VariableItalic.ttf') format('truetype');

  font-weight: 300 900;

  font-display: swap;

  font-style: italic;
}

@font-face {
  font-family: 'Satoshi-Light';

  src: url('/assets/fonts/satoshi/Satoshi-Light.woff2') format('woff2'),
       url('/assets/fonts/satoshi/Satoshi-Light.woff') format('woff'),
       url('/assets/fonts/satoshi/Satoshi-Light.ttf') format('truetype');

  font-weight: 300;

  font-display: swap;

  font-style: normal;
}

@font-face {
  font-family: 'Satoshi-LightItalic';

  src: url('/assets/fonts/satoshi/Satoshi-LightItalic.woff2') format('woff2'),
       url('/assets/fonts/satoshi/Satoshi-LightItalic.woff') format('woff'),
       url('/assets/fonts/satoshi/Satoshi-LightItalic.ttf') format('truetype');

  font-weight: 300;

  font-display: swap;

  font-style: italic;
}

@font-face {
  font-family: 'Satoshi-Regular';

  src: url('/assets/fonts/satoshi/Satoshi-Regular.woff2') format('woff2'),
       url('/assets/fonts/satoshi/Satoshi-Regular.woff') format('woff'),
       url('/assets/fonts/satoshi/Satoshi-Regular.ttf') format('truetype');

  font-weight: 400;

  font-display: swap;

  font-style: normal;
}

@font-face {
  font-family: 'Satoshi-Italic';

  src: url('/assets/fonts/satoshi/Satoshi-Italic.woff2') format('woff2'),
       url('/assets/fonts/satoshi/Satoshi-Italic.woff') format('woff'),
       url('/assets/fonts/satoshi/Satoshi-Italic.ttf') format('truetype');

  font-weight: 400;

  font-display: swap;

  font-style: italic;
}

@font-face {
  font-family: 'Satoshi-Medium';

  src: url('/assets/fonts/satoshi/Satoshi-Medium.woff2') format('woff2'),
       url('/assets/fonts/satoshi/Satoshi-Medium.woff') format('woff'),
       url('/assets/fonts/satoshi/Satoshi-Medium.ttf') format('truetype');

  font-weight: 500;

  font-display: swap;

  font-style: normal;
}

@font-face {
  font-family: 'Satoshi-MediumItalic';

  src: url('/assets/fonts/satoshi/Satoshi-MediumItalic.woff2') format('woff2'),
       url('/assets/fonts/satoshi/Satoshi-MediumItalic.woff') format('woff'),
       url('/assets/fonts/satoshi/Satoshi-MediumItalic.ttf') format('truetype');

  font-weight: 500;

  font-display: swap;

  font-style: italic;
}

@font-face {
  font-family: 'Satoshi-Bold';

  src: url('/assets/fonts/satoshi/Satoshi-Bold.woff2') format('woff2'),
       url('/assets/fonts/satoshi/Satoshi-Bold.woff') format('woff'),
       url('/assets/fonts/satoshi/Satoshi-Bold.ttf') format('truetype');

  font-weight: 700;

  font-display: swap;

  font-style: normal;
}

@font-face {
  font-family: 'Satoshi-BoldItalic';

  src: url('/assets/fonts/satoshi/Satoshi-BoldItalic.woff2') format('woff2'),
       url('/assets/fonts/satoshi/Satoshi-BoldItalic.woff') format('woff'),
       url('/assets/fonts/satoshi/Satoshi-BoldItalic.ttf') format('truetype');

  font-weight: 700;

  font-display: swap;

  font-style: italic;
}

@font-face {
  font-family: 'Satoshi-Black';

  src: url('/assets/fonts/satoshi/Satoshi-Black.woff2') format('woff2'),
       url('/assets/fonts/satoshi/Satoshi-Black.woff') format('woff'),
       url('/assets/fonts/satoshi/Satoshi-Black.ttf') format('truetype');

  font-weight: 900;

  font-display: swap;

  font-style: normal;
}

@font-face {
  font-family: 'Satoshi-BlackItalic';

  src: url('/assets/fonts/satoshi/Satoshi-BlackItalic.woff2') format('woff2'),
       url('/assets/fonts/satoshi/Satoshi-BlackItalic.woff') format('woff'),
       url('/assets/fonts/satoshi/Satoshi-BlackItalic.ttf') format('truetype');

  font-weight: 900;

  font-display: swap;

  font-style: italic;
}

* {
  outline: none;
}

html {
  scroll-behavior: smooth;
}

body {
  width: 100%;
  min-height: 100vh;
  font-family: var(--font-text);
  font-size: 16px;
  color: rgb(var(--color-black));
  display: block;
}

a {
  text-decoration: none;
  color: inherit;
}

.heading-1 {
  font-family: var(--font-title);
  font-size: var(--typescale-u4);
  font-weight: 600;
}

.heading-2 {
  font-family: var(--font-text);
  font-size: 1.25em;
  font-weight: bold;
}

.heading-3 {
  font-family: var(--font-text);
  font-size: 1em;
  font-weight: 500;
}

.hidden {
  display: none;
}

.opacity-0 {
  opacity: 0;
}

/* Container */

.main-container {
  width: 100%;
  min-height: 80vh;
  display: block;
  position: relative;
  padding: 2rem 20%;
  margin: 2rem 0;
}

.heightTop {
  height: 56px;
}

@media only screen and (max-width: 728px) {
  .main-container {
    padding: 0 20px;
  }
}

@media only screen and (min-width: 1440px) {
  .main-container {
    padding: 0 20%;
  }
}

.hidden-anim {
  animation: to-hidden 4s forwards;
}

@keyframes to-hidden {
  0% {
    opacity: 1;
  }

  80% {
    opacity: 1;
  }

  100% {
    opacity: 0;
  }
}

.container{
  width: 100%;
}

@media (min-width: 640px){
  .container{
    max-width: 640px;
  }
}

@media (min-width: 768px){
  .container{
    max-width: 768px;
  }
}

@media (min-width: 1024px){
  .container{
    max-width: 1024px;
  }
}

@media (min-width: 1280px){
  .container{
    max-width: 1280px;
  }
}

@media (min-width: 1536px){
  .container{
    max-width: 1536px;
  }
}

.visible{
  visibility: visible;
}

.static{
  position: static;
}

.absolute{
  position: absolute;
}

.relative{
  position: relative;
}

.sticky{
  position: sticky;
}

.col-span-2{
  grid-column: span 2 / span 2;
}

.col-span-3{
  grid-column: span 3 / span 3;
}

.my-2{
  margin-top: 0.5rem;
  margin-bottom: 0.5rem;
}

.mb-2{
  margin-bottom: 0.5rem;
}

.mb-4{
  margin-bottom: 1rem;
}

.ml-1{
  margin-left: 0.25rem;
}

.mr-4{
  margin-right: 1rem;
}

.mt-10{
  margin-top: 2.5rem;
}

.mt-2{
  margin-top: 0.5rem;
}

.mt-3{
  margin-top: 0.75rem;
}

.mt-4{
  margin-top: 1rem;
}

.block{
  display: block;
}

.flex{
  display: flex;
}

.table{
  display: table;
}

.grid{
  display: grid;
}

.hidden{
  display: none;
}

.h-20{
  height: 5rem;
}

.h-fit{
  height: -moz-fit-content;
  height: fit-content;
}

.w-20{
  width: 5rem;
}

.w-\[200px\]{
  width: 200px;
}

.w-\[250px\]{
  width: 250px;
}

.w-full{
  width: 100%;
}

.flex-shrink{
  flex-shrink: 1;
}

.transform{
  transform: translate(var(--tw-translate-x), var(--tw-translate-y)) rotate(var(--tw-rotate)) skewX(var(--tw-skew-x)) skewY(var(--tw-skew-y)) scaleX(var(--tw-scale-x)) scaleY(var(--tw-scale-y));
}

.resize{
  resize: both;
}

.grid-cols-2{
  grid-template-columns: repeat(2, minmax(0, 1fr));
}

.grid-cols-5{
  grid-template-columns: repeat(5, minmax(0, 1fr));
}

.flex-col{
  flex-direction: column;
}

.flex-wrap{
  flex-wrap: wrap;
}

.items-center{
  align-items: center;
}

.justify-center{
  justify-content: center;
}

.justify-between{
  justify-content: space-between;
}

.gap-1{
  gap: 0.25rem;
}

.gap-12{
  gap: 3rem;
}

.gap-2{
  gap: 0.5rem;
}

.gap-4{
  gap: 1rem;
}

.gap-8{
  gap: 2rem;
}

.rounded{
  border-radius: 0.25rem;
}

.rounded-3xl{
  border-radius: 1.5rem;
}

.rounded-lg{
  border-radius: 0.5rem;
}

.border{
  border-width: 1px;
}

.border-solid{
  border-style: solid;
}

.border-gray-1{
  --tw-border-opacity: 1;
  border-color: rgb(225 225 225 / var(--tw-border-opacity));
}

.object-cover{
  -o-object-fit: cover;
     object-fit: cover;
}

.px-6{
  padding-left: 1.5rem;
  padding-right: 1.5rem;
}

.py-16{
  padding-top: 4rem;
  padding-bottom: 4rem;
}

.py-4{
  padding-top: 1rem;
  padding-bottom: 1rem;
}

.indent-6{
  text-indent: 1.5rem;
}

.font-bold{
  font-weight: 700;
}

.italic{
  font-style: italic;
}

.text-gray-3{
  --tw-text-opacity: 1;
  color: rgb(131 131 131 / var(--tw-text-opacity));
}

.text-gray-4{
  --tw-text-opacity: 1;
  color: rgb(82 82 82 / var(--tw-text-opacity));
}

.underline{
  text-decoration-line: underline;
}

.opacity-0{
  opacity: 0;
}

.shadow{
  --tw-shadow: 0 1px 3px 0 rgb(0 0 0 / 0.1), 0 1px 2px -1px rgb(0 0 0 / 0.1);
  --tw-shadow-colored: 0 1px 3px 0 var(--tw-shadow-color), 0 1px 2px -1px var(--tw-shadow-color);
  box-shadow: var(--tw-ring-offset-shadow, 0 0 #0000), var(--tw-ring-shadow, 0 0 #0000), var(--tw-shadow);
}

.outline{
  outline-style: solid;
}

.blur{
  --tw-blur: blur(8px);
  filter: var(--tw-blur) var(--tw-brightness) var(--tw-contrast) var(--tw-grayscale) var(--tw-hue-rotate) var(--tw-invert) var(--tw-saturate) var(--tw-sepia) var(--tw-drop-shadow);
}

.transition{
  transition-property: color, background-color, border-color, text-decoration-color, fill, stroke, opacity, box-shadow, transform, filter, -webkit-backdrop-filter;
  transition-property: color, background-color, border-color, text-decoration-color, fill, stroke, opacity, box-shadow, transform, filter, backdrop-filter;
  transition-property: color, background-color, border-color, text-decoration-color, fill, stroke, opacity, box-shadow, transform, filter, backdrop-filter, -webkit-backdrop-filter;
  transition-timing-function: cubic-bezier(0.4, 0, 0.2, 1);
  transition-duration: 150ms;
}